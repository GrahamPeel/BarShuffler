{"ast":null,"code":"var _jsxFileName = \"/Users/gpeel/GitHub/bar-shuffler/src/pages/CreateRecipe.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Container, Row, Col, Form, FormGroup, Input, Button } from 'reactstrap';\nimport { GenerateGuid } from '../Library';\n\nconst CreateRecipe = () => {\n  const generateIngredientEntry = () => {\n    return {\n      value: \"\",\n      id: GenerateGuid()\n    };\n  };\n\n  const [recipeName, setRecipeName] = useState(\"\");\n  const [recipeInstructions, setRecipeInstructions] = useState(\"\");\n  const [recipeIngredients, setRecipeIngredients] = useState([generateIngredientEntry()]);\n  const [recipeCreatedSuccessfully, setRecipeCreatedSuccessfully] = useState(false);\n  useEffect(() => {\n    console.log(\"Create Recipe useEffect[] started\");\n  }, []);\n\n  const handleIngredientValueChange = (id, event) => {\n    const ingredients = [...recipeIngredients];\n    ingredients.filter(ing => ing.id === id)[0].value = event.target.value;\n    setRecipeIngredients(ingredients);\n  };\n\n  const getIngredientPlaceholder = idx => `Add your ${idx === 0 ? 'first' : 'next'} ingredient here...like '2oz Rum'`;\n\n  const handleAddAnotherClick = () => {\n    const ingredients = [...recipeIngredients, generateIngredientEntry()];\n    setRecipeIngredients(ingredients);\n  };\n\n  const handleRecipeSave = () => {\n    // localStorage.setItem('savedIngredients', JSON.stringify(newSavedIngredients))\n    const json = localStorage.getItem(\"savedRecipes\");\n    const oldRecipes = json ? Object.assign([], JSON.parse(json)) : [];\n    const newRecipe = {\n      id: GenerateGuid(),\n      name: recipeName,\n      ingredients: [...recipeIngredients]\n    };\n    localStorage.setItem('savedRecipes', JSON.stringify([...oldRecipes, newRecipe]));\n  };\n\n  return recipeCreatedSuccessfully ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 37\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Create a new Cocktail Recipe\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"New Recipe Name (leave blank for random)\",\n    value: recipeName,\n    onChange: e => setRecipeName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    placeholder: \"Instructions (optional)\",\n    value: recipeInstructions,\n    onChange: e => setRecipeInstructions(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 37\n    }\n  }, \"Ingredients\"), recipeIngredients.map((ing, idx) => /*#__PURE__*/React.createElement(Row, {\n    key: ing.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 45\n    }\n  }, \"#\", idx + 1), /*#__PURE__*/React.createElement(Col, {\n    sm: \"11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: ing.value,\n    placeholder: getIngredientPlaceholder(idx),\n    onChange: e => handleIngredientValueChange(ing.id, e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 49\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 10 + 'px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    sm: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleAddAnotherClick,\n    color: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 45\n    }\n  }, \"Add another ingredient\")), /*#__PURE__*/React.createElement(Col, {\n    sm: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleRecipeSave,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 45\n    }\n  }, \"Save this Recipe\")))))))));\n};\n\nexport default CreateRecipe;","map":{"version":3,"sources":["/Users/gpeel/GitHub/bar-shuffler/src/pages/CreateRecipe.js"],"names":["React","useState","useEffect","Redirect","Container","Row","Col","Form","FormGroup","Input","Button","GenerateGuid","CreateRecipe","generateIngredientEntry","value","id","recipeName","setRecipeName","recipeInstructions","setRecipeInstructions","recipeIngredients","setRecipeIngredients","recipeCreatedSuccessfully","setRecipeCreatedSuccessfully","console","log","handleIngredientValueChange","event","ingredients","filter","ing","target","getIngredientPlaceholder","idx","handleAddAnotherClick","handleRecipeSave","json","localStorage","getItem","oldRecipes","Object","assign","JSON","parse","newRecipe","name","setItem","stringify","e","map","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,SAApC,EAA+CC,KAA/C,EAAsDC,MAAtD,QAAoE,YAApE;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAMC,uBAAuB,GAAG,MAAM;AAAE,WAAO;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,EAAE,EAAEJ,YAAY;AAA7B,KAAP;AAA0C,GAAlF;;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACiB,kBAAD,EAAqBC,qBAArB,IAA8ClB,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACmB,iBAAD,EAAoBC,oBAApB,IAA4CpB,QAAQ,CAAC,CAACY,uBAAuB,EAAxB,CAAD,CAA1D;AACA,QAAM,CAACS,yBAAD,EAA4BC,4BAA5B,IAA4DtB,QAAQ,CAAC,KAAD,CAA1E;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,2BAA2B,GAAG,CAACX,EAAD,EAAKY,KAAL,KAAe;AAC/C,UAAMC,WAAW,GAAG,CAAC,GAAGR,iBAAJ,CAApB;AACAQ,IAAAA,WAAW,CAACC,MAAZ,CAAmBC,GAAG,IAAIA,GAAG,CAACf,EAAJ,KAAWA,EAArC,EAAyC,CAAzC,EAA4CD,KAA5C,GAAoDa,KAAK,CAACI,MAAN,CAAajB,KAAjE;AACAO,IAAAA,oBAAoB,CAACO,WAAD,CAApB;AACH,GAJD;;AAMA,QAAMI,wBAAwB,GAAIC,GAAD,IAAU,YAAWA,GAAG,KAAK,CAAR,GAAY,OAAZ,GAAsB,MAAO,mCAAnF;;AAEA,QAAMC,qBAAqB,GAAG,MAAM;AAChC,UAAMN,WAAW,GAAG,CAAC,GAAGR,iBAAJ,EAAuBP,uBAAuB,EAA9C,CAApB;AACAQ,IAAAA,oBAAoB,CAACO,WAAD,CAApB;AACH,GAHD;;AAKA,QAAMO,gBAAgB,GAAG,MAAM;AAC3B;AACA,UAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAb;AACA,UAAMC,UAAU,GAAGH,IAAI,GAAGI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBC,IAAI,CAACC,KAAL,CAAWP,IAAX,CAAlB,CAAH,GAAyC,EAAhE;AACA,UAAMQ,SAAS,GAAG;AACd7B,MAAAA,EAAE,EAAEJ,YAAY,EADF;AAEdkC,MAAAA,IAAI,EAAE7B,UAFQ;AAGdY,MAAAA,WAAW,EAAE,CAAC,GAAGR,iBAAJ;AAHC,KAAlB;AAKAiB,IAAAA,YAAY,CAACS,OAAb,CAAqB,cAArB,EAAqCJ,IAAI,CAACK,SAAL,CAAe,CAAC,GAAGR,UAAJ,EAAgBK,SAAhB,CAAf,CAArC;AACH,GAVD;;AAYA,SACItB,yBAAyB,gBAAG,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,0CAFhB;AAGI,IAAA,KAAK,EAAEN,UAHX;AAII,IAAA,QAAQ,EAAEgC,CAAC,IAAI/B,aAAa,CAAC+B,CAAC,CAACjB,MAAF,CAASjB,KAAV,CAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAQI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,WAAW,EAAC,yBAFhB;AAGI,IAAA,KAAK,EAAEI,kBAHX;AAII,IAAA,QAAQ,EAAE8B,CAAC,IAAI7B,qBAAqB,CAAC6B,CAAC,CAACjB,MAAF,CAASjB,KAAV,CAJxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CARJ,eAeI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEKM,iBAAiB,CAAC6B,GAAlB,CAAsB,CAACnB,GAAD,EAAMG,GAAN,kBACnB,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEH,GAAG,CAACf,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAckB,GAAG,GAAG,CAApB,CADJ,eAEI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,KAAK,EAAEH,GAAG,CAAChB,KAFf;AAGI,IAAA,WAAW,EAAEkB,wBAAwB,CAACC,GAAD,CAHzC;AAII,IAAA,QAAQ,EAAEe,CAAC,IAAItB,2BAA2B,CAACI,GAAG,CAACf,EAAL,EAASiC,CAAT,CAJ9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADH,CAFL,CAfJ,eA8BI;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE,KAAK;AAAf,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BJ,eA+BI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAEhB,qBADb;AAEI,IAAA,KAAK,EAAC,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,CAFJ,eASI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAEC,gBADb;AAEI,IAAA,KAAK,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CATJ,CADJ,CA/BJ,CADJ,CADJ,CADJ,CAHJ,CAFR;AAgEH,CApGD;;AAsGA,eAAevB,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Container, Row, Col, Form, FormGroup, Input, Button } from 'reactstrap'\nimport { GenerateGuid } from '../Library'\n\nconst CreateRecipe = () => {\n    const generateIngredientEntry = () => { return { value: \"\", id: GenerateGuid() } }\n    const [recipeName, setRecipeName] = useState(\"\");\n    const [recipeInstructions, setRecipeInstructions] = useState(\"\");\n    const [recipeIngredients, setRecipeIngredients] = useState([generateIngredientEntry()])\n    const [recipeCreatedSuccessfully, setRecipeCreatedSuccessfully] = useState(false)\n\n    useEffect(() => {\n        console.log(\"Create Recipe useEffect[] started\")\n    }, [])\n\n    const handleIngredientValueChange = (id, event) => {\n        const ingredients = [...recipeIngredients]\n        ingredients.filter(ing => ing.id === id)[0].value = event.target.value\n        setRecipeIngredients(ingredients)\n    }\n\n    const getIngredientPlaceholder = (idx) => `Add your ${idx === 0 ? 'first' : 'next'} ingredient here...like '2oz Rum'`\n\n    const handleAddAnotherClick = () => {\n        const ingredients = [...recipeIngredients, generateIngredientEntry()]\n        setRecipeIngredients(ingredients)\n    }\n\n    const handleRecipeSave = () => {\n        // localStorage.setItem('savedIngredients', JSON.stringify(newSavedIngredients))\n        const json = localStorage.getItem(\"savedRecipes\")\n        const oldRecipes = json ? Object.assign([], JSON.parse(json)) : []\n        const newRecipe = {\n            id: GenerateGuid(),\n            name: recipeName,\n            ingredients: [...recipeIngredients]\n        }\n        localStorage.setItem('savedRecipes', JSON.stringify([...oldRecipes, newRecipe]))\n    }\n\n    return (\n        recipeCreatedSuccessfully ? <Redirect to='/' /> :\n            <div>\n                <h1>Create a new Cocktail Recipe</h1>\n                <br />\n                <Container>\n                    <Row>\n                        <Col xs=\"6\">\n                            <Form>\n                                <FormGroup>\n                                    <Input\n                                        type=\"text\"\n                                        placeholder=\"New Recipe Name (leave blank for random)\"\n                                        value={recipeName}\n                                        onChange={e => setRecipeName(e.target.value)} />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Input\n                                        type=\"textarea\"\n                                        placeholder=\"Instructions (optional)\"\n                                        value={recipeInstructions}\n                                        onChange={e => setRecipeInstructions(e.target.value)} />\n                                </FormGroup>\n                                <Container>\n                                    <h4>Ingredients</h4>\n                                    {recipeIngredients.map((ing, idx) =>\n                                        <Row key={ing.id}>\n                                            <Col sm=\"1\">#{idx + 1}</Col>\n                                            <Col sm=\"11\">\n                                                <Input\n                                                    type=\"text\"\n                                                    value={ing.value}\n                                                    placeholder={getIngredientPlaceholder(idx)}\n                                                    onChange={e => handleIngredientValueChange(ing.id, e)} />\n                                            </Col>\n                                        </Row>\n                                    )}\n                                </Container>\n                                <div style={{ height: 10 + 'px' }}></div>\n                                <Container>\n                                    <Row>\n                                        <Col sm=\"1\"></Col>\n                                        <Col sm=\"7\">\n                                            <Button\n                                                onClick={handleAddAnotherClick}\n                                                color=\"link\">\n                                                Add another ingredient\n                                        </Button>\n                                        </Col>\n                                        <Col sm=\"4\">\n                                            <Button\n                                                onClick={handleRecipeSave}\n                                                color=\"primary\">\n                                                Save this Recipe\n                                        </Button>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </Form>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n    )\n}\n\nexport default CreateRecipe"]},"metadata":{},"sourceType":"module"}