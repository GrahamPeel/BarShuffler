{"ast":null,"code":"var _jsxFileName = \"/Users/gpeel/GitHub/bar-shuffler/src/pages/Inventory.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport 'react-router-dom';\nimport { Col, Row, Table } from 'reactstrap';\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\nimport { GenerateGuid, GetIngredientTypeList } from '../Library'; // Viewmodel types\n\nconst Ingredient = (name, typeId) => {\n  return {\n    Id: GenerateGuid(),\n    Name: name,\n    TypeId: typeId\n  };\n};\n\nconst Inventory = () => {\n  const [newIngName, setNewIngName] = useState(\"\");\n  const [newIngCatId, setNewIngCatId] = useState(\"1\");\n  const [savedIngredients, setIngItems] = useState(null); // Ingredient[]\n\n  const textInput = useRef(null);\n  useEffect(() => {\n    console.log(\"Inventory useEffect[] started\");\n    textInput.current.focus(); // FakeAjax\n\n    setTimeout(() => {\n      const json = localStorage.getItem(\"savedIngredients\");\n      const obj = json ? Object.assign([], JSON.parse(json)) : [];\n      setIngItems(obj);\n    }, 1000);\n  }, []);\n\n  const bindSavedIngredients = newSavedIngredients => {\n    setIngItems(newSavedIngredients);\n    localStorage.setItem('savedIngredients', JSON.stringify(newSavedIngredients));\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const newIng = Ingredient(newIngName || \"[no name]\", newIngCatId);\n    console.log('Inventory save new item ' + newIng);\n    bindSavedIngredients([...savedIngredients, newIng]);\n    setNewIngName(\"\");\n  };\n\n  const removeClick = (e, id) => {\n    e.preventDefault();\n    console.log('remove ' + id);\n    bindSavedIngredients(savedIngredients.filter(ing => ing.Id !== id));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Inventory\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Your Inventory\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  }, \"Item\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 46\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, !savedIngredients ? /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 50\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 54\n    }\n  }, \"loading\")) : savedIngredients.length === 0 ? /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 67\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 71\n    }\n  }, \"None\")) : savedIngredients.map(ing => /*#__PURE__*/React.createElement(\"tr\", {\n    key: ing.Id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 45\n    }\n  }, ing.Name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    size: \"sm\",\n    color: \"primary\",\n    onClick: e => removeClick(e, ing.Id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 49\n    }\n  }, \"remove\"))))))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Add a new Inventory Item\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"New Ingredient Name\",\n    ref: textInput,\n    value: newIngName,\n    onChange: e => setNewIngName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    value: newIngCatId,\n    onChange: e => setNewIngCatId(e.currentTarget.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, GetIngredientTypeList().map(type => /*#__PURE__*/React.createElement(\"option\", {\n    key: type.value,\n    value: type.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 37\n    }\n  }, type.text)))), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, \"Submit\")))));\n};\n\nexport default Inventory;","map":{"version":3,"sources":["/Users/gpeel/GitHub/bar-shuffler/src/pages/Inventory.js"],"names":["React","useState","useEffect","useRef","Col","Row","Table","Button","Form","FormGroup","Input","GenerateGuid","GetIngredientTypeList","Ingredient","name","typeId","Id","Name","TypeId","Inventory","newIngName","setNewIngName","newIngCatId","setNewIngCatId","savedIngredients","setIngItems","textInput","console","log","current","focus","setTimeout","json","localStorage","getItem","obj","Object","assign","JSON","parse","bindSavedIngredients","newSavedIngredients","setItem","stringify","handleSubmit","evt","preventDefault","newIng","removeClick","e","id","filter","ing","length","map","target","value","currentTarget","type","text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { } from 'react-router-dom'\nimport { Col, Row, Table, } from 'reactstrap'\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\nimport { GenerateGuid, GetIngredientTypeList } from '../Library'\n// Viewmodel types\nconst Ingredient = (name, typeId) => { return { Id: GenerateGuid(), Name: name, TypeId: typeId } }\n\n\nconst Inventory = () => {\n    const [newIngName, setNewIngName] = useState(\"\");\n    const [newIngCatId, setNewIngCatId] = useState(\"1\");\n    const [savedIngredients, setIngItems] = useState(null); // Ingredient[]\n    const textInput = useRef(null);\n\n    useEffect(() => {\n        console.log(\"Inventory useEffect[] started\")\n        textInput.current.focus();\n        // FakeAjax\n        setTimeout(() => {\n            const json = localStorage.getItem(\"savedIngredients\")\n            const obj = json ? Object.assign([], JSON.parse(json)) : []\n            setIngItems(obj);\n        }, 1000);\n    }, [])\n\n    const bindSavedIngredients = (newSavedIngredients) => {\n        setIngItems(newSavedIngredients);\n        localStorage.setItem('savedIngredients', JSON.stringify(newSavedIngredients))\n    }\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        const newIng = Ingredient(newIngName || \"[no name]\", newIngCatId)\n        console.log('Inventory save new item ' + newIng)\n        bindSavedIngredients([...savedIngredients, newIng]);\n        setNewIngName(\"\")\n    }\n\n    const removeClick = (e, id) => {\n        e.preventDefault();\n        console.log('remove ' + id)\n        bindSavedIngredients(savedIngredients.filter(ing => ing.Id !== id));\n    }\n\n    return (\n        <div>\n            <h1>Inventory</h1>\n            <br />\n            <Row>\n                <Col>\n                    <h3>Your Inventory</h3>\n                    <br /><br />\n                    <Table>\n                        <thead>\n                            <tr><th>Item</th><th></th></tr>\n                        </thead>\n                        <tbody>\n                            {!savedIngredients ? <tr><td colSpan=\"2\">loading</td></tr>\n                                : savedIngredients.length === 0 ? <tr><td colSpan=\"2\">None</td></tr>\n                                    : savedIngredients.map((ing) =>\n                                        <tr key={ing.Id}>\n                                            <td>{ing.Name}</td>\n                                            <td><Button outline size=\"sm\" color=\"primary\" onClick={(e) => removeClick(e, ing.Id)}>remove</Button></td>\n                                        </tr>\n                                    )}\n                        </tbody>\n                    </Table>\n                </Col>\n                <Col>\n                    <h3>Add a new Inventory Item</h3>\n                    <br /><br />\n                    <Form onSubmit={handleSubmit}>\n                        <FormGroup>\n                            <Input\n                                type=\"text\"\n                                placeholder=\"New Ingredient Name\"\n                                ref={textInput} \n                                value={newIngName}\n                                onChange={e => setNewIngName(e.target.value)} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Input\n                                type=\"select\"\n                                value={newIngCatId}\n                                onChange={e => setNewIngCatId(e.currentTarget.value)}>\n                                {GetIngredientTypeList().map(type =>\n                                    <option key={type.value} value={type.value}>{type.text}</option>\n                                )}\n                            </Input>\n                        </FormGroup>\n                        <Button color=\"primary\">Submit</Button>\n                    </Form>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Inventory\n"]},"metadata":{},"sourceType":"module"}