{"ast":null,"code":"var _jsxFileName = \"/Users/gpeel/GitHub/bar-shuffler/src/pages/Inventory.js\";\nimport React, { useState, useEffect } from 'react';\nimport 'react-router-dom';\nimport { Col, Row, Table } from 'reactstrap';\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\n\nconst Inventory = () => {\n  const [newIngName, setNewIngName] = useState(\"\");\n  const [newIngCatId, setNewIngCatId] = useState(\"1\");\n  const [ingItems, setIngItems] = useState([]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    alert(`Submitting Name ${newIngName} Value ${newIngCatId}`);\n  };\n\n  useEffect(() => {\n    console.log(\"Inventory useEffect[] started\"); // FakeAjax\n\n    setTimeout(() => {\n      setIngItems([{\n        IngName: \"Scotch\"\n      }, {\n        IngName: \"Bourbon\"\n      }]);\n    }, 2000);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Inventory \", GetThing(() => console.log('hello'))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, \"Your Inventory \", GetId()), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }\n  }, \"Item\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, !ingItems || ingItems.length === 0 ? /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 39\n    }\n  }, \"loading\")) : ingItems.map(_ => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: _.IngName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 62\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 82\n      }\n    }, _.IngName));\n  })))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Add a new Inventory Item\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"newIngredName\",\n    placeholder: \"New Ingredient Name (leave blank for random)\",\n    value: newIngName,\n    onChange: e => setNewIngName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"select\",\n    id: \"newIngredType\",\n    value: newIngCatId,\n    onChange: e => setNewIngCatId(e.currentTarget.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }\n  }, \"Normal Spirit\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }, \"Overproof Spirit\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }, \"Liquote/Cordial\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  }, \"Fruit Juice\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }\n  }, \"Bitters/Spices\"))), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, \"Submit\")))));\n};\n\nexport default Inventory;","map":{"version":3,"sources":["/Users/gpeel/GitHub/bar-shuffler/src/pages/Inventory.js"],"names":["React","useState","useEffect","Col","Row","Table","Button","Form","FormGroup","Input","Inventory","newIngName","setNewIngName","newIngCatId","setNewIngCatId","ingItems","setIngItems","handleSubmit","evt","preventDefault","alert","console","log","setTimeout","IngName","GetThing","GetId","length","map","_","e","target","value","currentTarget"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { } from 'react-router-dom'\nimport { Col, Row, Table, } from 'reactstrap'\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\n\nconst Inventory = () => {\n    const [newIngName, setNewIngName] = useState(\"\");\n    const [newIngCatId, setNewIngCatId] = useState(\"1\");\n\n    const [ingItems, setIngItems] = useState([])\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        alert(`Submitting Name ${newIngName} Value ${newIngCatId}`)\n    }\n\n    useEffect(() => {\n        console.log(\"Inventory useEffect[] started\")\n        // FakeAjax\n        setTimeout(() => {\n             setIngItems([{ IngName: \"Scotch\" }, { IngName: \"Bourbon\" }]);\n        }, 2000);\n    }, [])\n\n    return (\n        <div>\n            <h1>Inventory {GetThing(() => console.log('hello'))}</h1>\n            <br />\n            <Row>\n                <Col>\n                    <h3>Your Inventory {GetId()}</h3>\n                    <br /><br />\n                    <Table>\n                        <thead>\n                            <tr><th>Item</th></tr>\n                        </thead>\n                        <tbody>\n                            {!ingItems || ingItems.length === 0\n                                ? <tr><td>loading</td></tr>\n                                : ingItems.map(_ => { return <tr key={_.IngName}><td>{_.IngName}</td></tr> })}\n                        </tbody>\n                    </Table>\n                </Col>\n                <Col>\n                    <h3>Add a new Inventory Item</h3>\n                    <br /><br />\n                    <Form onSubmit={handleSubmit}>\n                        <FormGroup>\n                            <Input type=\"text\" id=\"newIngredName\" placeholder=\"New Ingredient Name (leave blank for random)\"\n                                value={newIngName}\n                                onChange={e => setNewIngName(e.target.value)} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Input type=\"select\" name=\"select\" id=\"newIngredType\"\n                                value={newIngCatId}\n\n                                onChange={e => setNewIngCatId(e.currentTarget.value)}>\n                                <option value=\"1\">Normal Spirit</option>\n                                <option value=\"2\">Overproof Spirit</option>\n                                <option value=\"3\">Liquote/Cordial</option>\n                                <option value=\"4\">Fruit Juice</option>\n                                <option value=\"5\">Bitters/Spices</option>\n                            </Input>\n                        </FormGroup>\n                        <Button>Submit</Button>\n                    </Form>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Inventory\n"]},"metadata":{},"sourceType":"module"}