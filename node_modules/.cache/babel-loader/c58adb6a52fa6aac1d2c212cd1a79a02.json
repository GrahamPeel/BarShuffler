{"ast":null,"code":"var _jsxFileName = \"/Users/gpeel/GitHub/bar-shuffler/src/pages/Inventory.js\";\nimport React, { useState, useEffect } from 'react';\nimport 'react-router-dom';\nimport { Col, Row, Table } from 'reactstrap';\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\nimport { GenerateGuid, GetIngredientTypeList } from '../Library'; // Viewmodel types\n\nconst Ingredient = (name, typeId) => {\n  return {\n    id: GenerateGuid(),\n    name: name,\n    typeId: typeId\n  };\n};\n\nconst Inventory = () => {\n  const [newIngName, setNewIngName] = useState(\"\");\n  const [newIngCatId, setNewIngCatId] = useState(\"1\");\n  const [savedIngredients, setIngItems] = useState(null); // Ingredient[]\n\n  useEffect(() => {\n    console.log(\"Inventory useEffect[] started\"); // FakeAjax\n\n    setTimeout(() => {\n      const json = localStorage.getItem(\"savedIngredients\");\n      const obj = json ? Object.assign([], JSON.parse(json)) : [];\n      setIngItems(obj);\n    }, 1000);\n  }, []);\n\n  const bindSavedIngredients = newSavedIngredients => {\n    setIngItems(newSavedIngredients);\n    localStorage.setItem('savedIngredients', JSON.stringify(newSavedIngredients));\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const newIng = Ingredient(newIngName || \"[no name]\", newIngCatId);\n    console.log('Inventory save new item ' + newIng);\n    bindSavedIngredients([...savedIngredients, newIng]);\n    setNewIngName(\"\");\n  };\n\n  const removeClick = (e, id) => {\n    //e.preventDefault();\n    console.log('remove ' + id);\n    bindSavedIngredients(savedIngredients.filter(ing => ing.Id !== id));\n  };\n\n  const ingredientTypeList = GetIngredientTypeList();\n\n  const findIngredientTypeById = typeId => {\n    return ingredientTypeList.filter(type => type.typeId === typeId)[0];\n  };\n\n  findIngredientTypeById('1');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Inventory\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Your Inventory\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }, \"Item\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 46\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 59\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, !savedIngredients ? /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 50\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 54\n    }\n  }, \"loading\")) : savedIngredients.length === 0 ? /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 67\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 71\n    }\n  }, \"None\")) : savedIngredients.map(ing => /*#__PURE__*/React.createElement(\"tr\", {\n    key: ing.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 45\n    }\n  }, ing.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 45\n    }\n  }, ing.typeId), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    size: \"sm\",\n    color: \"primary\",\n    onClick: e => removeClick(e, ing.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 49\n    }\n  }, \"remove\"))))))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"Add a new Inventory Item\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"New Ingredient Name\",\n    value: newIngName,\n    onChange: e => setNewIngName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    value: newIngCatId,\n    onChange: e => setNewIngCatId(e.currentTarget.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, GetIngredientTypeList().map(type => /*#__PURE__*/React.createElement(\"option\", {\n    key: type.typeId,\n    value: type.typeId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 37\n    }\n  }, type.text)))), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, \"Submit\")))));\n};\n\nexport default Inventory;","map":{"version":3,"sources":["/Users/gpeel/GitHub/bar-shuffler/src/pages/Inventory.js"],"names":["React","useState","useEffect","Col","Row","Table","Button","Form","FormGroup","Input","GenerateGuid","GetIngredientTypeList","Ingredient","name","typeId","id","Inventory","newIngName","setNewIngName","newIngCatId","setNewIngCatId","savedIngredients","setIngItems","console","log","setTimeout","json","localStorage","getItem","obj","Object","assign","JSON","parse","bindSavedIngredients","newSavedIngredients","setItem","stringify","handleSubmit","evt","preventDefault","newIng","removeClick","e","filter","ing","Id","ingredientTypeList","findIngredientTypeById","type","length","map","target","value","currentTarget","text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { } from 'react-router-dom'\nimport { Col, Row, Table, } from 'reactstrap'\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\nimport { GenerateGuid, GetIngredientTypeList } from '../Library'\n// Viewmodel types\nconst Ingredient = (name, typeId) => { return { id: GenerateGuid(), name: name, typeId: typeId } }\n\nconst Inventory = () => {\n    const [newIngName, setNewIngName] = useState(\"\");\n    const [newIngCatId, setNewIngCatId] = useState(\"1\");\n    const [savedIngredients, setIngItems] = useState(null); // Ingredient[]\n\n    useEffect(() => {\n        console.log(\"Inventory useEffect[] started\")\n        // FakeAjax\n        setTimeout(() => {\n            const json = localStorage.getItem(\"savedIngredients\")\n            const obj = json ? Object.assign([], JSON.parse(json)) : []\n            setIngItems(obj);\n        }, 1000);\n    }, [])\n\n    const bindSavedIngredients = (newSavedIngredients) => {\n        setIngItems(newSavedIngredients);\n        localStorage.setItem('savedIngredients', JSON.stringify(newSavedIngredients))\n    }\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        const newIng = Ingredient(newIngName || \"[no name]\", newIngCatId)\n        console.log('Inventory save new item ' + newIng)\n        bindSavedIngredients([...savedIngredients, newIng]);\n        setNewIngName(\"\")\n    }\n\n    const removeClick = (e, id) => {\n        //e.preventDefault();\n        console.log('remove ' + id)\n        bindSavedIngredients(savedIngredients.filter(ing => ing.Id !== id));\n    }\n\n    const ingredientTypeList = GetIngredientTypeList();\n    const findIngredientTypeById = (typeId) => {\n        return ingredientTypeList.filter(type => type.typeId === typeId)[0]\n    } \n\n    findIngredientTypeById('1')\n\n    return (\n        <div>\n            <h1>Inventory</h1>\n            <br />\n            <Row>\n                <Col>\n                    <h3>Your Inventory</h3>\n                    <br /><br />\n                    <Table>\n                        <thead>\n                            <tr><th>Item</th><th>Type</th><th></th></tr>\n                        </thead>\n                        <tbody>\n                            {!savedIngredients ? <tr><td colSpan=\"3\">loading</td></tr>\n                                : savedIngredients.length === 0 ? <tr><td colSpan=\"3\">None</td></tr>\n                                    : savedIngredients.map((ing) =>\n                                        <tr key={ing.id}>\n                                            <td>{ing.name}</td>\n                                            <td>{ing.typeId}</td>\n                                            <td><Button outline size=\"sm\" color=\"primary\" onClick={(e) => removeClick(e, ing.id)}>remove</Button></td>\n                                        </tr>\n                                    )}\n                        </tbody>\n                    </Table>\n                </Col>\n                <Col>\n                    <h3>Add a new Inventory Item</h3>\n                    <br /><br />\n                    <Form onSubmit={handleSubmit}>\n                        <FormGroup>\n                            <Input\n                                type=\"text\"\n                                placeholder=\"New Ingredient Name\"\n                                value={newIngName}\n                                onChange={e => setNewIngName(e.target.value)} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Input\n                                type=\"select\"\n                                value={newIngCatId}\n                                onChange={e => setNewIngCatId(e.currentTarget.value)}>\n                                {GetIngredientTypeList().map(type =>\n                                    <option key={type.typeId} value={type.typeId}>{type.text}</option>\n                                )}\n                            </Input>\n                        </FormGroup>\n                        <Button color=\"primary\">Submit</Button>\n                    </Form>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Inventory\n"]},"metadata":{},"sourceType":"module"}