{"ast":null,"code":"var _jsxFileName = \"/Users/gpeel/GitHub/bar-shuffler/src/pages/CreateRecipe.js\";\nimport React, { useState, useEffect } from 'react';\nimport 'react-router-dom';\nimport { Container, Row, Col, Form, FormGroup, Input } from 'reactstrap';\nimport { GenerateGuid } from '../Library';\n\nconst CreateRecipe = () => {\n  const generateIngredientEntry = () => {\n    return {\n      value: null,\n      id: GenerateGuid()\n    };\n  };\n\n  const [recipeName, setRecipeName] = useState(\"\");\n  const [recipeInstructions, setRecipeInstructions] = useState(\"\");\n  const [recipeIngredients, setRecipeIngredients] = useState([generateIngredientEntry()]);\n  useEffect(() => {\n    console.log(\"Create Recipe useEffect[] started\"); // FakeAjax\n\n    /* setTimeout(() => {\n        const json = localStorage.getItem(\"savedIngredients\")\n        const obj = json ? Object.assign([], JSON.parse(json)) : []\n        setSavedIngredients(obj);\n    }, 1000); */\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Create a new Cocktail Recipe\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"New Recipe Name (leave blank for random)\",\n    value: newRecipeName,\n    onChange: e => setNewRecipeName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    placeholder: \"Instructions (optional)\",\n    value: newRecipeInstructions,\n    onChange: e => setNewRecipeInstructions(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, recipeIngredients.map(ing => /*#__PURE__*/React.createElement(\"div\", {\n    key: ing.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: ing.value,\n    onChange: e => handleInputChange(ing.id, e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 41\n    }\n  })))))))));\n};\n\nexport default CreateRecipe;","map":{"version":3,"sources":["/Users/gpeel/GitHub/bar-shuffler/src/pages/CreateRecipe.js"],"names":["React","useState","useEffect","Container","Row","Col","Form","FormGroup","Input","GenerateGuid","CreateRecipe","generateIngredientEntry","value","id","recipeName","setRecipeName","recipeInstructions","setRecipeInstructions","recipeIngredients","setRecipeIngredients","console","log","newRecipeName","e","setNewRecipeName","target","newRecipeInstructions","setNewRecipeInstructions","map","ing","handleInputChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAgB,kBAAhB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,SAApC,EAA+CC,KAA/C,QAA4D,YAA5D;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAMC,uBAAuB,GAAG,MAAM;AAAE,WAAO;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,EAAE,EAAEJ,YAAY;AAA/B,KAAP;AAA4C,GAApF;;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACe,kBAAD,EAAqBC,qBAArB,IAA8ChB,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACiB,iBAAD,EAAoBC,oBAApB,IAA4ClB,QAAQ,CAAC,CAACU,uBAAuB,EAAxB,CAAD,CAA1D;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EADY,CAEZ;;AACA;;;;;AAKH,GARQ,EAQN,EARM,CAAT;AAUA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,0CAFhB;AAGI,IAAA,KAAK,EAAEC,aAHX;AAII,IAAA,QAAQ,EAAEC,CAAC,IAAIC,gBAAgB,CAACD,CAAC,CAACE,MAAF,CAASb,KAAV,CAJnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAQI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,WAAW,EAAC,yBAFhB;AAGI,IAAA,KAAK,EAAEc,qBAHX;AAII,IAAA,QAAQ,EAAEH,CAAC,IAAII,wBAAwB,CAACJ,CAAC,CAACE,MAAF,CAASb,KAAV,CAJ3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CARJ,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKM,iBAAiB,CAACU,GAAlB,CAAsBC,GAAG,iBACtB;AAAK,IAAA,GAAG,EAAEA,GAAG,CAAChB,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,KAAK,EAAEgB,GAAG,CAACjB,KAFf;AAGI,IAAA,QAAQ,EAAEW,CAAC,IAAIO,iBAAiB,CAACD,GAAG,CAAChB,EAAL,EAASU,CAAT,CAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADH,CADL,CAfJ,CADJ,CADJ,CADJ,CAHJ,CADJ;AAsCH,CAtDD;;AAwDA,eAAeb,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { } from 'react-router-dom'\nimport { Container, Row, Col, Form, FormGroup, Input } from 'reactstrap'\nimport { GenerateGuid } from '../Library'\n\nconst CreateRecipe = () => {\n    const generateIngredientEntry = () => { return { value: null, id: GenerateGuid() } }\n    const [recipeName, setRecipeName] = useState(\"\");\n    const [recipeInstructions, setRecipeInstructions] = useState(\"\");\n    const [recipeIngredients, setRecipeIngredients] = useState([generateIngredientEntry()])\n\n    useEffect(() => {\n        console.log(\"Create Recipe useEffect[] started\")\n        // FakeAjax\n        /* setTimeout(() => {\n            const json = localStorage.getItem(\"savedIngredients\")\n            const obj = json ? Object.assign([], JSON.parse(json)) : []\n            setSavedIngredients(obj);\n        }, 1000); */\n    }, [])\n\n    return (\n        <div>\n            <h1>Create a new Cocktail Recipe</h1>\n            <br />\n            <Container>\n                <Row>\n                    <Col xs=\"6\">\n                        <Form>\n                            <FormGroup>\n                                <Input\n                                    type=\"text\"\n                                    placeholder=\"New Recipe Name (leave blank for random)\"\n                                    value={newRecipeName}\n                                    onChange={e => setNewRecipeName(e.target.value)} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Input\n                                    type=\"textarea\"\n                                    placeholder=\"Instructions (optional)\"\n                                    value={newRecipeInstructions}\n                                    onChange={e => setNewRecipeInstructions(e.target.value)} />\n                            </FormGroup>\n                            <div>\n                                {recipeIngredients.map(ing =>\n                                    <div key={ing.id}>\n                                        <Input \n                                            type=\"text\"\n                                            value={ing.value}\n                                            onChange={e => handleInputChange(ing.id, e)} />\n                                    </div>\n                                )}\n                            </div>\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default CreateRecipe"]},"metadata":{},"sourceType":"module"}