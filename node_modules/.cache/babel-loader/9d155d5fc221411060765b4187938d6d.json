{"ast":null,"code":"var _jsxFileName = \"/Users/gpeel/GitHub/bar-shuffler/src/pages/CreateRecipe.js\";\nimport React, { useState, useEffect } from 'react';\nimport 'react-router-dom';\nimport { Container, Row, Col, Form, FormGroup, Input } from 'reactstrap';\nimport { GenerateGuid } from '../Library';\n\nconst CreateRecipe = () => {\n  const generateIngredientEntry = () => {\n    return {\n      value: \"\",\n      id: GenerateGuid()\n    };\n  };\n\n  const [recipeName, setRecipeName] = useState(\"\");\n  const [recipeInstructions, setRecipeInstructions] = useState(\"\");\n  const [recipeIngredients, setRecipeIngredients] = useState([generateIngredientEntry()]);\n  useEffect(() => {\n    console.log(\"Create Recipe useEffect[] started\"); // FakeAjax\n\n    /* setTimeout(() => {\n        const json = localStorage.getItem(\"savedIngredients\")\n        const obj = json ? Object.assign([], JSON.parse(json)) : []\n        setSavedIngredients(obj);\n    }, 1000); */\n\n    console.log(recipeIngredients);\n  }, []);\n\n  const handleIngredientValueChange = (id, event) => {\n    const ingredients = [...recipeIngredients];\n    ingredients.filter(ing => ing.id === id)[0].value = event.target.value;\n    setRecipeIngredients(ingredients);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Create a new Cocktail Recipe\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"New Recipe Name (leave blank for random)\",\n    value: recipeName,\n    onChange: e => setRecipeName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    placeholder: \"Instructions (optional)\",\n    value: recipeInstructions,\n    onChange: e => setRecipeInstructions(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 33\n    }\n  }, \"Ingredients\"), recipeIngredients.map((ing, idx) => /*#__PURE__*/React.createElement(Row, {\n    key: ing.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 41\n    }\n  }, idx), /*#__PURE__*/React.createElement(Col, {\n    sm: \"11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: ing.value,\n    onChange: e => handleIngredientValueChange(ing.id, e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 45\n    }\n  }))))))))));\n};\n\nexport default CreateRecipe;","map":{"version":3,"sources":["/Users/gpeel/GitHub/bar-shuffler/src/pages/CreateRecipe.js"],"names":["React","useState","useEffect","Container","Row","Col","Form","FormGroup","Input","GenerateGuid","CreateRecipe","generateIngredientEntry","value","id","recipeName","setRecipeName","recipeInstructions","setRecipeInstructions","recipeIngredients","setRecipeIngredients","console","log","handleIngredientValueChange","event","ingredients","filter","ing","target","e","map","idx"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { } from 'react-router-dom'\nimport { Container, Row, Col, Form, FormGroup, Input } from 'reactstrap'\nimport { GenerateGuid } from '../Library'\n\nconst CreateRecipe = () => {\n    const generateIngredientEntry = () => { return { value: \"\", id: GenerateGuid() } }\n    const [recipeName, setRecipeName] = useState(\"\");\n    const [recipeInstructions, setRecipeInstructions] = useState(\"\");\n    const [recipeIngredients, setRecipeIngredients] = useState([generateIngredientEntry()])\n\n    useEffect(() => {\n        console.log(\"Create Recipe useEffect[] started\")\n        // FakeAjax\n        /* setTimeout(() => {\n            const json = localStorage.getItem(\"savedIngredients\")\n            const obj = json ? Object.assign([], JSON.parse(json)) : []\n            setSavedIngredients(obj);\n        }, 1000); */\n        console.log(recipeIngredients)\n    }, [])\n\n    const handleIngredientValueChange = (id, event) => {\n        const ingredients = [...recipeIngredients];\n        ingredients.filter(ing => ing.id === id)[0].value = event.target.value;\n        setRecipeIngredients(ingredients);\n    }\n\n    return (\n        <div>\n            <h1>Create a new Cocktail Recipe</h1>\n            <br />\n            <Container>\n                <Row>\n                    <Col xs=\"6\">\n                        <Form>\n                            <FormGroup>\n                                <Input\n                                    type=\"text\"\n                                    placeholder=\"New Recipe Name (leave blank for random)\"\n                                    value={recipeName}\n                                    onChange={e => setRecipeName(e.target.value)} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Input\n                                    type=\"textarea\"\n                                    placeholder=\"Instructions (optional)\"\n                                    value={recipeInstructions}\n                                    onChange={e => setRecipeInstructions(e.target.value)} />\n                            </FormGroup>\n                            <Container>\n                                <h4>Ingredients</h4>\n                                {recipeIngredients.map((ing, idx) =>\n                                    <Row key={ing.id}>\n                                        <Col sm=\"1\">{idx}</Col>\n                                        <Col sm=\"11\">\n                                            <Input\n                                                type=\"text\"\n                                                value={ing.value}\n                                                onChange={e => handleIngredientValueChange(ing.id, e)} />\n                                        </Col>\n                                    </Row>\n                                )}\n                            </Container>\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default CreateRecipe"]},"metadata":{},"sourceType":"module"}